SQL Definition of orders

create table public.orders (
  id bigint generated always as identity not null,
  grand_total numeric not null,
  payment_mode text not null,
  note text null,
  created_at timestamp with time zone null default now(),
  status public.order_status null,
  order_type public.order type null,
  payment_method public.payment method null,
  customer_id uuid null,
  constraint orders_pkey primary key (id)
) TABLESPACE pg_default;


SQL Definition of order_items

create table public.order_items (
  id uuid not null default gen_random_uuid (),
  order_id bigint null,
  item_name text not null,
  variant text not null,
  quantity integer not null,
  price_per_unit numeric not null,
  constraint order_items_pkey primary key (id),
  constraint order_items_order_id_fkey foreign KEY (order_id) references orders (id) on delete CASCADE
) TABLESPACE pg_default;


SQL Definition of customers

create table public.customers (
  id bigint generated always as identity not null,
  first_name text not null,
  last_name text null,
  mobile_number character varying(15) not null,
  email text null,
  password_hash text not null,
  building_no text not null,
  area text not null,
  city text not null,
  state text not null,
  pin_code character varying(10) not null,
  landmark text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  user_id uuid null,
  constraint customers_pkey primary key (id),
  constraint customers_email_key unique (email),
  constraint customers_mobile_number_key unique (mobile_number),
  constraint customers_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create trigger update_customers_updated_at BEFORE
update on customers for EACH row
execute FUNCTION update_updated_at_column ();


SQL Definition of menu_items

create table public.menu_items (
  id uuid not null default gen_random_uuid (),
  name text not null,
  category text not null,
  prices jsonb not null,
  recipe jsonb null,
  created_at timestamp with time zone null default now(),
  image_url text null,
  description text null,
  constraint menu_items_pkey primary key (id),
  constraint menu_items_name_category_key unique (name, category)
) TABLESPACE pg_default;


create table public.inventory (

create table public.inventory (
  id uuid not null default gen_random_uuid (),
  name text not null,
  stock numeric not null,
  unit text not null,
  created_at timestamp with time zone null default now(),
  constraint inventory_pkey primary key (id),
  constraint inventory_name_key unique (name)
) TABLESPACE pg_default;


SQL Definition of discount_coupons

create table public.discount_coupons (
  id bigserial not null,
  coupon_code character varying(50) not null,
  coupon_name character varying(255) not null,
  description text null,
  discount_type character varying(20) not null,
  discount_value numeric(10, 2) not null,
  minimum_order_amount numeric(10, 2) null default 0,
  maximum_discount_amount numeric(10, 2) null,
  usage_limit integer null,
  used_count integer null default 0,
  valid_from timestamp with time zone not null,
  valid_until timestamp with time zone not null,
  is_active boolean null default true,
  applicable_categories text[] null,
  applicable_items text[] null,
  first_time_customer_only boolean null default false,
  single_use_per_customer boolean null default false,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint discount_coupons_pkey primary key (id),
  constraint discount_coupons_coupon_code_key unique (coupon_code),
  constraint discount_coupons_discount_type_check check (
    (
      (discount_type)::text = any (
        (
          array[
            'percentage'::character varying,
            'fixed_amount'::character varying
          ]
        )::text[]
      )
    )
  )
) TABLESPACE pg_default;


SQL Definition of expenses

create table public.expenses (
  id uuid not null default gen_random_uuid (),
  expense_date date not null default CURRENT_DATE,
  expense_time time without time zone not null default CURRENT_TIME,
  category text not null,
  subcategory text null,
  description text not null,
  amount numeric(10, 2) not null,
  payment_method text not null default 'Cash'::text,
  vendor_name text null,
  reference_number text null,
  is_raw_material boolean null default false,
  inventory_item_id uuid null,
  quantity_used numeric(10, 3) null,
  unit text null,
  gst_amount numeric(10, 2) null default 0,
  total_amount numeric(10, 2) not null,
  notes text null,
  receipt_image_url text null,
  created_by uuid null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint expenses_pkey primary key (id),
  constraint expenses_inventory_item_id_fkey foreign KEY (inventory_item_id) references inventory (id)
) TABLESPACE pg_default;

create index IF not exists idx_expenses_date on public.expenses using btree (expense_date) TABLESPACE pg_default;

create index IF not exists idx_expenses_category on public.expenses using btree (category) TABLESPACE pg_default;

create index IF not exists idx_expenses_is_raw_material on public.expenses using btree (is_raw_material) TABLESPACE pg_default;

create index IF not exists idx_expenses_inventory_item on public.expenses using btree (inventory_item_id) TABLESPACE pg_default;

create trigger update_expenses_updated_at BEFORE
update on expenses for EACH row
execute FUNCTION update_updated_at_column ();
